server {

    listen              80;
    listen              [::]:80 ipv6only=on;
    server_name         ${NODE_DOMAIN};

    tcp_nopush          on;
    sendfile            on;
    tcp_nodelay         on;
    sendfile_max_chunk  1m;

    access_log          /var/log/nginx/frog.accree.log;
    error_log           /var/log/nginx/frog.error.log;

    root                ${TASK_DOWNLOAD_PATH}; #default /data/cache/

    # xunlei lixian
    deny 116.55.231.0/24;

    location ^~ /api/ {
        proxy_pass http://127.0.0.1:9019;
    }

    location ~ /files/(\S+)/(\w+)/(\w+)/(\w+)/(\w+)/(.*)$ {
        root /data/cache/;
        default_type  text/html;
        set $file_path_b64 $1;
        set $task_id $2;
        set $user_id $3;
        set $time_stamp $4;
        set $signature $5;
        set $sb_xl_name $6;
        rewrite_by_lua_block {
            local tmp = ngx.var.file_path_b64 .. ngx.var.task_id .. ngx.var.user_id .. ngx.var.time_stamp
            tmp = ngx.unescape_uri(tmp) .. "${YOUR_file_signature_key}"
            local sig = ngx.md5(tmp)
            -- check signature
            if sig ~= ngx.var.signature then
                ngx.exit(ngx.HTTP_FORBIDDEN)
            end
            -- check expire time
            if tonumber(ngx.var.time_stamp) + 12 * 3600 < ngx.now() then
              ngx.exit(ngx.HTTP_SERVICE_UNAVAILABLE)
            end
            local tmp = ngx.re.gsub(ngx.var.file_path_b64, "-", "/")
            tmp = ngx.re.gsub(tmp, "%2B", "+")
            local file_path = ngx.decode_base64(tmp)
            ngx.req.set_uri("/" .. file_path)
            ngx.exec("@file")
        }
    }

    location @file {
        add_header Content-Disposition "attachment;";
    }

}
